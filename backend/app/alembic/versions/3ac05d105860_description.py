"""description

Revision ID: 3ac05d105860
Revises: 7c6352ba2722
Create Date: 2025-10-22 01:47:02.696230

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = '3ac05d105860'
down_revision = '7c6352ba2722'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('lms_resources',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('owner_id', sa.Uuid(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('thumbnail_url', sqlmodel.sql.sqltypes.AutoString(length=2000), nullable=True),
    sa.Column('target_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('target_id', sa.Uuid(), nullable=True),
    sa.Column('knowledge_base_folder_id', sa.Uuid(), nullable=True),
    sa.Column('my_metadata', sa.JSON(), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('published_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['knowledge_base_folder_id'], ['knowledge_base_folders.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_lms_resources_created_at'), 'lms_resources', ['created_at'], unique=False)
    op.create_index(op.f('ix_lms_resources_knowledge_base_folder_id'), 'lms_resources', ['knowledge_base_folder_id'], unique=False)
    op.create_index(op.f('ix_lms_resources_owner_id'), 'lms_resources', ['owner_id'], unique=False)
    op.create_index(op.f('ix_lms_resources_target_id'), 'lms_resources', ['target_id'], unique=False)
    op.create_index(op.f('ix_lms_resources_target_type'), 'lms_resources', ['target_type'], unique=False)
    op.create_index(op.f('ix_lms_resources_title'), 'lms_resources', ['title'], unique=False)
    op.add_column('api_keys', sa.Column('project_id', sa.Uuid(), nullable=True))
    op.create_index(op.f('ix_api_keys_project_id'), 'api_keys', ['project_id'], unique=False)
    op.create_foreign_key(None, 'api_keys', 'projects', ['project_id'], ['id'], ondelete='CASCADE')
    op.add_column('thread', sa.Column('target_type', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('thread', 'target_type')
    op.drop_constraint(None, 'api_keys', type_='foreignkey')
    op.drop_index(op.f('ix_api_keys_project_id'), table_name='api_keys')
    op.drop_column('api_keys', 'project_id')
    op.drop_index(op.f('ix_lms_resources_title'), table_name='lms_resources')
    op.drop_index(op.f('ix_lms_resources_target_type'), table_name='lms_resources')
    op.drop_index(op.f('ix_lms_resources_target_id'), table_name='lms_resources')
    op.drop_index(op.f('ix_lms_resources_owner_id'), table_name='lms_resources')
    op.drop_index(op.f('ix_lms_resources_knowledge_base_folder_id'), table_name='lms_resources')
    op.drop_index(op.f('ix_lms_resources_created_at'), table_name='lms_resources')
    op.drop_table('lms_resources')
    # ### end Alembic commands ###
